name: Sync Fork and Build Docker Image

on:
  schedule:
    # Ref:
    #   - https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule
    #   - https://crontab.guru/examples.html
    # Cron format:
    #         ┌───────────── minute (0 - 59)
    #         │ ┌───────────── hour (0 - 23)
    #         │ │ ┌───────────── day of the month (1 - 31)
    #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #         │ │ │ │ │
    #         │ │ │ │ │
    #         │ │ │ │ │
    #         * * * * *
    - cron: "10 0 15 * *"
  workflow_dispatch: # 手動実行も可能に

jobs:
  # https://qiita.com/KEINOS/items/3bcaa6cea853f6b63475
  sync-and-check-tags:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.check-tags.outputs.new_tag }}
      tag: ${{ steps.check-tags.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

        # フォーク元のリポジトリをリモート先として "upstream" と命名
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/arp242/goatcounter.git

      - name: Fetch from upstream
        run: |
          git fetch upstream --tags

      - name: Check for new tags and trigger build
        id: check-tags
        run: |
          # 最新のタグを取得
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $LATEST_TAG"

          # 既にビルド済みのタグかチェック
          if ! git ls-remote --tags origin | grep -q $LATEST_TAG; then
            # 新しいタグがあれば同期してビルドをトリガー
            # upstream（フォーク元）のmainをマージ
            git merge --no-edit upstream/main
            git push origin HEAD:main
            git push origin $LATEST_TAG
            echo "new_tag=true" >> $GITHUB_ENV
            echo "tag=$LATEST_TAG" >> $GITHUB_ENV
            echo "new_tag=true" >> $GITHUB_OUTPUT
            echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No new tags to build"
            echo "new_tag=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: sync-and-check-tags
    if: ${{ needs.sync-and-check-tags.outputs.new_tag == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.sync-and-check-tags.outputs.tag }} # タグをチェックアウト

      - name: Download Dockerfile
        run: curl -fsSL https://gist.githubusercontent.com/shigaichi/7916073b1653129ac382ebb84ad46c7d/raw/8054e1a830cd1643512456742a40fde54132161a/Dockerfile -o Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/goatcounter:latest
            ghcr.io/${{ github.repository_owner }}/goatcounter:${{ needs.sync-and-check-tags.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
